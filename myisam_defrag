#!/usr/bin/env python

'''
myisam_derag.

Hunts for fragmented MyISAM tables, and defragments them.
Can either be run ad-hoc, or via a cron task.

__author__="David Busby"
__copyright__="David Busby Saiweb.co.uk"
__license__="GNU v3 + part 5d section 7: Redistribution/Reuse of this code is permitted under the GNU v3 license, as an additional term ALL code must carry the original Author(s) credit in comment form."
__version__="0.2"
'''

import os, sys, ConfigParser, getopt
import MySQLdb
from time import strftime, gmtime

def log(logfile, msg):
    '''log msg to logFile
    
    Keyword arguments:
    logfile -- The path to the desired file, to which messages will be logged.
    msg     -- The log entry that should be written
    '''
    msg = '[%s] %s\n' % (strftime("%a, %d %b %Y %H:%M:%S +0000", gmtime()), msg)
    lfp = file(logfile, 'a+')
    lfp.write(msg)
    lfp.close()

def usage():
    '''prints out usage information and exits with code 0'''
    print 'Usage:', sys.argv[0] ,'-c /etc/myisam_defrag.conf'
    print 'Note: -c is an optional overide, assumes default location if missing'
    sys.exit(0)

def main():
    '''main program'''
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hc:", ["help", "config="])
    except getopt.GetoptError, err:
        print str(err)
        usage()
    del(args)
    
    cnf = '/etc/myisam_defrag.conf'
    for opt, arg in opts:
        if opt in ('-c','--config'):
            cnf = arg
        else:
            assert False, "Unsupported option"

    if not os.path.isfile(cnf):
        print 'Configuration file does not exist!', cnf
        sys.exit(1)
    else:
        cfg = ConfigParser.ConfigParser()
        cfg.read(cnf)
    try:
        logfile = cfg.get('myisam_defrag','logfile')
        login_conf = cfg.get('myisam_defrag','login_conf')
        frag_thresh = cfg.getint('myisam_defrag','frag_thresh')
    except (ConfigParser.NoOptionError or ConfigParser.NoSectionError), err:
        print 'Missing a required configuration option'
        print err
        sys.exit(1)

    if not os.path.isfile(login_conf):
        print 'login_conf does not exist!', login_conf

        sys.exit(1)
    else:
        cfg.read(login_conf)
    try:
        usr = cfg.get('client','user')
        pwd = cfg.get('client','password')
    except (ConfigParser.NoOptionError or ConfigParser.NoSectionError), err:
        print 'Missing a required configuration option'
        print err
        sys.exit(1)

    dbc = MySQLdb.connect(
        host="localhost",
        user=usr,
        passwd=pwd,
        db="information_schema"
    )
    cursor = dbc.cursor()
    cursor.execute("""
    SELECT
        CONCAT(TABLE_SCHEMA,'.',TABLE_NAME) AS TABLE_NAME, 
        (DATA_FREE/DATA_LENGTH) AS FRAG_RATIO 
    FROM
        TABLES 
    WHERE
        ENGINE = 'MyISAM' AND (DATA_LENGTH > 0 OR DATA_FREE > 0)
        AND (DATA_FREE/DATA_LENGTH) >=%s""" % (1.00*frag_thresh/100))
    res = cursor.fetchall()
    i = 0
    for row in res:
        i += 1
        sql = 'optimize table %s' % row[0]
        log(
            logfile,
            '%s found to be %s%% fragmented optimizing' % (row[0],(row[1]*100))
        )
        cursor.execute(sql)
    if i == 0:
        log(
            logfile,
            'Nothing to optimize. Perhaps lower frag_thresh in %s?' %cnf
        )

if __name__ == '__main__':
    main()

